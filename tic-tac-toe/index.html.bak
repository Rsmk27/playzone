<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe | PlayZone</title>
  <style>
    body {
      background: #0d1117;
      color: #fff;
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }
    h1 {
      margin-bottom: 20px;
      color: #ffcc00;
      text-shadow: 0 0 10px #ffcc00;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
    }
    .cell {
      width: 100px;
      height: 100px;
      background: #111;
      border: 2px solid #ffcc00;
      font-size: 2em;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
    .cell:hover {
      background: #222;
    }
    #status {
      margin-top: 15px;
      font-size: 18px;
      font-weight: bold;
    }
    .reset-btn, .back-btn {
      margin-top: 15px;
      padding: 8px 14px;
      background: #ffcc00;
      color: #000;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-weight: bold;
      text-decoration: none;
      display: inline-block;
    }
    .reset-btn:hover, .back-btn:hover {
      background: #e6b800;
    }
  </style>
</head>
<body>
  <h1>Tic Tac Toe</h1>
  <div class="board" id="board"></div>
  <div id="status">Player X's Turn</div>
  <button class="reset-btn" onclick="resetGame()">Restart</button>
  <a href="../index.html" class="back-btn">â¬… Back to Home</a>

  <script>
    const boardElement = document.getElementById("board");
    const statusElement = document.getElementById("status");
    let board = Array(9).fill("");
    let currentPlayer = "X";
    let gameActive = true;

    function renderBoard() {
      boardElement.innerHTML = "";
      board.forEach((cell, index) => {
        const cellElement = document.createElement("div");
        cellElement.classList.add("cell");
        cellElement.textContent = cell;
        cellElement.addEventListener("click", () => makeMove(index));
        boardElement.appendChild(cellElement);
      });
    }

    function makeMove(index) {
      if (!gameActive || board[index] !== "") return;
      board[index] = currentPlayer;
      if (checkWinner()) {
        statusElement.textContent = `Player ${currentPlayer} Wins! ðŸŽ‰`;
        gameActive = false;
      } else if (board.every(cell => cell !== "")) {
        statusElement.textContent = "It's a Draw!";
        gameActive = false;
      } else {
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        statusElement.textContent = `Player ${currentPlayer}'s Turn`;
      }
      renderBoard();
    }

    function checkWinner() {
      const winPatterns = [
        [0,1,2],[3,4,5],[6,7,8],
        [0,3,6],[1,4,7],[2,5,8],
        [0,4,8],[2,4,6]
      ];
      return winPatterns.some(pattern =>
        pattern.every(index => board[index] === currentPlayer)
      );
    }

    function resetGame() {
      board = Array(9).fill("");
      currentPlayer = "X";
      gameActive = true;
      statusElement.textContent = "Player X's Turn";
      renderBoard();
    }

    renderBoard();
  </script>
</body>
</html>
